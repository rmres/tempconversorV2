<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACuFwAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAFv
        ck5UAc+id5oAABdoSURBVHja7Z15lFRVfsfHNaOjjmZOMprkj0nOmZwkJ2dOEjNRBEQW2RXZl+6mG2QR
        WQQVFBdEUURZ4jruC7gRt7jEEEeB7kZhVLrpqt6quqG7a+mlunqhG5Cdm3tLmvW9V7f2V12fzznfUwXH
        pare/X3u8u5772c/AwAAAAAAAAAAAAAAAAAAAADbU+Bw/2O+o3KOfF1X6HB/X+BwBWQOyByTEcej3h+U
        CRY63cXy9V2ZBQVO97/wCwKkGbLQfy0L+QFZxO5TijyqFJa6PfL1cSmQ3/DLAti68F1XykL9gyzY/bEW
        vkEOyxHB2zJ/xy8NYKdhvtN1riz8u2SR7klA4Z+Z/XJUsFS+XsgvD5Dy4nf/tSzGwiQU/pkpltL5LUcA
        IHXFf62c6zeloPi70i4zgCMBkOzid7gGyezTKdStlTWixNssKps7xc7dB0TtniOibu9R4dl3LBT1Xv1d
        dfsBURHoEMV1TeLb8p26ElBnD0ZzRACSVvzuvrLofgxXnEU1DaK6bf+JQo8kSgqu4F7xfbVPRwKHZG7i
        yAAkmHxH5T/JYtttVZDfVXlkbx5d4RvF3bI3NIoII4F9W0qrruYIASSu57803Ll9p7/ltOF9vKL+mzvk
        1CCMBOpkruBIASRGAG+YbthxuuUcf0/cC//MlDW2h5GA+784UgDxL/4bz9i+e1rxq2F6oou/K+VNu60k
        cExOU1gPAIhf8bvOk6kwK7qKpo6kFX9XSutbTSWQ73BVy1zAkQOIhwCc7jyzYlOn7JJd/F1rAj/s8luN
        BGZw5ABiH/qfI4up0qjIvi3fFTp/nwoBqNR0HhZbyqrNBFBdUOI6lyMIEJsABpgO/QMdKSt+rUXBEtdg
        jiBADBQ6q9YZFde2ytqEnO6LZirwbcUuEwFUvsMRBIi693edb7bpR/W8qS7+kwuCbWajgI7NJZUsBgJE
        OfzvZXbaL5Vzf6O1ALNpgBTA9RxJgOhGAPcYFZXan2+X4u/Kd9Ve41OCJZWLOZIA0QlgvfF231bbCUBt
        QTYRADsDAaISgNNdZFRU6io9uwnAFdxjKIBNOyqKOZIA0Y0Amo2Katfug7YTwE75mUxGAM0cSYDoBHDA
        qKjstADYFfWZTARwgCMJEJ0ADC/+scP5f6P9ACYCOMaRBIhOAIZFZbfi74rpxUElledwNAHsJIC2/cLr
        bRZeT0B4WvYlVAAFCAAgxQKQc3T/1u0i8J9Pi9aZM0Tb6FtE+/Go963TpormJ1eK+k1bhKfjYHwF4HAh
        AIBUCaC+cJtomTP7RMGHS+u0W0XDF1+GpIEAANJVAK0/iuZVq7UL/8wElywR3giuOUAAAHYRQHOnaFm4
        MOri70rL7bOE1xtAAABpI4DOQyJ4330xF/8JCcjpg0dj9yECALCBAJreXBe34u+KmkogAACbC8BX7RVt
        40bHXQAq/h8cCADAzgIIrHkqIcUfWhS8/34EAGBbAch5etuEcQkTgIq3ph4BANhRAPUFWxNa/CqNH3+G
        AADsKICmN9YlXABWi4EIACCFAlBbeRMtgOA9ixAAgC0F8MgjCRdAy7y5CADAjgIILl2aeAHMnY0AABAA
        AgBAAAgAAAEgAAAEgAAAEAACAEAACAAAASAAAAQAAAgAABAAACAAAEAAAIAAAAABAAACAEAACAAAASAA
        gAziyaefu/CdT/9XGGVTUZlhtt5zr/hu3BjtOMeOFs0IAMB+3HHnXVdlZWUJo0yZMiVumZmXJ17Lmijq
        R49EAAB2IS8vLykC6MrC3MmidsxIBABgB3JycpIqAJWHc3JEGwIAyEwBqHw7fiwCAMhUAbyUNQkBAGSq
        AB7PyUYAAJkqgOUIACBzBfBMdhYCAMhUAWyYMA4BAGSiAObn5ooApwEBUk+yNwJNz8sT28eNYSMQgB1I
        1lZglcWTJ4uScaPZCgxgF1asefrSVc+9IIzy+voPDfPW/PninUkTtPPRxPGhXr+Ni4EA7AeXAwMgAAQA
        gAAQAAACQAAACAABACAABACAABAAAAJAAAAIAAEAIAAEAIAAEAAAAkAAAAgAAQAgAAQAgAAQAAACQAAA
        CAABACAABACAABAAAAJAAAAIAAEAIAAEAIAAEABAQln9/IvnfV6wTRilxBMwjOuBB8TOsaO04xszEgEA
        2JEFCxcl5clAd+VOFh9PHC+CCADAPkyZOjWpzwZcmpMjGkaPRAAAdiAVTwdelZ0V9jFhCACgmwpAJdwT
        ghEAQDcWwGtZExEAQKYK4ImcbAQAkKkCWI4AADJXAE9lZyEAgEwVwKcTxyMAgEwUwOy8XFEfZi8AAgBI
        Arm5uUkVwNS8PFEwfiwbgQDswNz5C5ImgHm5ueIbjeJHAABJ4pEVKy9fuvwJYZSnXnjZMM/OmSOez56k
        nVezJoqvJowTAS4GArAfXA4MgAAQAAACQAAACAABACAABACAABAAAAJAAAAIAAEAIAAEAIAAEAAAAkAA
        AAgAAQAgAAQAgAAQAAACQAAACAABACAABACAABAAAAJAAAAIAAEAIAAEAIAAEAAAAkAAAAln845yYZSa
        zsOGaXpoqWhRRaoZBABgU+66Z3HCnww0Iy9PPJaTLTaNHyvaEACAfbh12rSkPhtwTXaWCCIAAHuQiqcD
        v5g1CQEAZKoApsgpQenY0QgAICMFILN20kQEAJCpAngyOxsBAGSqAJbnIACAjBWAOhuAAAAyVAAfTpyA
        AAAyUQBqY1DdmJEIACDVTJ48OekC+GLCOPYBANiB2XPnJU0A02XP/z8axY8AAJLEQ489/qs7F90rjLJk
        2WOGefi228QjOTmayRYrs7PE+3LOXxtm2I8AAFIAlwMDIAAEAIAANAUwasTZQQAAGSCAh0wEEI+MHoEA
        AOwsgOaHHhJtI28+mVGnZsRZiUYELXMiF0B+SSUCAEi6AOKVUyQSjQA276hAAAARFb/TdWXEAlgiBXDL
        TT9l5JmJjwxaZt8esQA2FZX9miMKoN3zu2fkO1ztRsW0pbTaQgBLTgogXjlDJFYCUJ/NcAqwo7Lt66LS
        aRxZAOsh/1X5jsovLRbTxA87fdYCGDFcFq5R4iOElttnmf7/v6/2WS0EqqnAhk3F5VdypAHO7vUHyiIJ
        WhWQiiu417QAAw8uEa1SAKemLZYYiMRKAOqzhfv8UgCBjUVlAzniACeL/z5ZHEfDFU9xXZNp8f0kgAdl
        0Q8zyfCY0iWFllm3WX4G9RnDfY/8ksojUgSLOfKQ6UP+C2XxrwtXMCoOX1DU7T0aXgA3D4tPTEQSDCMA
        9RnVZ9X5TpuLy9+U04ILaAmQicV/scyX4Ypkm6tWVLfttyy6kwJ4QBbvUIvELobgrJlan0V95m2uOp3R
        wP9JCVxMi4BMKv5LZArj0eufJoAHpABuGhp7LCQSvG2m9ufRHQ1ICRRKCVxCy4BMKP6LZDZbFcQ3ZdXC
        3bJPu9BOF8AQi8Quh+BtMyL+XOq7qO8URgL5UgIX0UKgOxf/eXLO/2m4If+ujkMRF5lK0/33i5bhQ2KK
        tUCGRCUAFfWdwk0JpAA+kzmPlgLdki1lVc9YFYA6j16750hUBXZSAIMtMiTmNM+cHvXnU98t3F6BTcXl
        z9NSoNtR6KyaJhv4MfMNPv6I5vtnZe8REbj7btEybHD0GR4+zVPzhKfjYNSfU33H7bvqw0lgJi0GulHx
        u/9VNuz9Vrv7oi5+2av6v9wY6plbhg0Kk8FxSXP2JFH/wX8Lz+4DUUtACc9iPeDAxuKy39NyIP2Lv7Tq
        F7JRu8wa+5/cHlEX5bDf94NTBG6fJVqGDoo9wyLJcRHkTRb+jYVy9HE0Kgl8V+WxkkC1HAlcSguC9F74
        c7qfM2vk31bsEjWdhyMv/pa9onH1GhEcOjCKDAqlJY5penCJ8PqCka8JyO++taLGalHwFVoQpHPx9zLb
        4iunBaK6fX/EReOV/25A9rzBIQPjlyhFcqoEguPHCn/hnyL+PjvbDwg5SjIeBTgqj20qKu9PS4L0K36H
        6/wCh7vMrHcrb9odcbH4v/ijaFbn4gffKAs32gxMTJQU5PSgft3bEU8JKpo6rKYCVXIkcCEtCtJMAO65
        Zo1arYJHtsJ/VNS/+dZPhR/vJEAkjStXC0+EU5uimgarswKLaFGQTr3/ZTLNhjf0KKuObN4vi7/hxZdF
        cNCAkxkcS5IjkcZlj0YkAbUeYLZbUI4C2vN3VPyKlgVpQaHT9YDp0L+xPaKesf6NtaJ5UP/jGRBRglYZ
        nHiRNK54IqLpQJipwApaFqRD768u9Gk13uZbF9H5fv/nG0RAFf7AUzIoHkmeSBpeeyOiU4PqtKiJAPZs
        3lHx57QwsHfv73DPM+vF3C179Vf7d1SIwNBBsuj7nZL+8UmSJeL/ulD7e1e17rMaBdxPCwM79/7nyLiN
        Gq/a9KI99G/uFE1ZE0Xzjf1Oz8B4JbkiCYy8WXhrG7S/v9n1AlIAfjkKOJ+WBjad+7v7md/Lb492ATQ8
        vkIWfF+D9Is9A1MjksY779ReD1CXD1tsDrqFlga2RPZQa40a7dbKGu25v29bkQjIYg8MOCU3Wqc54qRG
        JP5Pv9CWoNmlw/I3/pSWBnYc/v9cptOo0ZY2tOk1/M7DonHqFFn0N1ikb/RJsUgCY0YKj+ZISJ0tMR4F
        VB7cXFJxBS0O7Lb4d7PZll/d8/6qhwz0v+H0DEhE+iZMJOGkUf/K69r3DlC/neE0oKRiMi0O7DYCeDnS
        B3mc1ftnT5JF3ydMboguNhFJ04jhwtOsNwowu2/A5pLKD2hxYDMBuOuMN/7o7fn3fZUvAv36nJ7+iUzq
        ROJ/Z73exqBAh8k6gKs9f0cltw4D26z+/63ZqnVNp979/RruXCCa+l1vmsCJ9Ik8NpNIY06W1hkBNQ2w
        2BPw77Q8sEvvn212g0+t4b8nIBplQTX1vf5k+iUmdhGJd7tT67ex2Bl4By0P7DICeNqoke4I8yivE4t/
        770vi763Zq6PLDYVSf3Tz2j9NiXeZuNRQInrHVoe2EUAm2O55r9hgRz+39D7ZPomI6kVSWPWJK3fprK5
        0+xmIWW0PLDLGQDDS3+17viz+4BoHNhfFn6vCNJbLzYXiae2UeN5AgfN1gEO5pewLRhS3/v/0ux23zq7
        /7xFpaKxT68TiUwEsSa1IvFt+ErrCkGzW4bJ/JYWCKnu/X9ndsNPrdN/738kC79nhOkVNukgEf9zf9Dc
        FlxrJgDuFwgpHwEMjOXqP/+qNaLx+p4/pU+yk1qRNCxapPUbWTxDIJcWCCkeAbhzYrnvX/3ChbL4r4sw
        Pa1jM5GYCiA3R+9+gbWNZgK4ixYIqZ4CzDZqnMWapwDrb50iGntfF4UE4pHUiqRh+NDYTgU6XA/TAiHV
        Alho1DhLPAG9U4DjxkgB9Igi1xnHbiKxEkDf3lo7Ah3+FmFyodVqWiCkWgCLDQUgey2tEcAtN4sGWdDR
        pDHmpF4iOs8XdJoIQE6/nqUFQnoLYMRNoqHXtVGkx9lJQ5F42qMXQCECABsI4C7DbcCaU4D6MaOiFEC8
        Eh+JNEQpDq0pgC9oNgVYRQuEVAtgTkyLgJNzREPPa6LItafHThLRFcngG2NdBFxGC4QUC8A9KZbTgP75
        86MUQLySOonUjx+r9RsVm58GvJMWCCklv6Tyxlg2AvmWPy7qr/sPyzQY5pqf0tMuiVwk/nlzY9wI5M6j
        BUKqpwD/bLgVuFxvK7D3rffCCiBesZtIfE+u1NsKXGm6FXgALRBSSqHT/YuYLgbaViTqe/w+uiRJHIkS
        iffDT2K8GMjNxUBgi1FAo+HlwG0alwO37hP+3j2il0DMSZ1EPOU7w18OvNv0cuBDUgAX0PrADgL4MpYb
        gvpnTE+hAFIjEv/QQVqnAM1uCCJTSssDe0wDHO6VhqcCNW54EZoGvL62GwggsvgeWqr126j9FCYCeJeW
        B3YZAYw2eySY1k1Bq70ZJwDvxkLNm4LWmc3/59HywC4CuMpsIVDd0kprGjB9WsYUv19tANL4XdQTlcxu
        C17gdF9NywMbTQNc5UYNtUzzuYDezzdkzvD/Kb07Alc0dZgJoFWGB4OAnUYB7tWxbAhSPaJ/xPDu3/v3
        7qF1M9AwG4DW0+LAbgLoazZc3dWh93Qg73sfdP/ef9mjeg8HlcN/s4eDymTT4sBu6wDnmu0HUFezaY8C
        xozqvr1/n17avb96pLpJ8e+XuYwWB3aUgOETgr4p36m1KzA0Cti4pfv2/i+8pPUbqN9KnUExuQT4I1oa
        2HUa8DuzswG6TwkKXSC0eHH36/3HjREenZ2RMq7gHqvV/2G0NLDzKGCb8Z6AWu1RgEcOf/3Dh3Sf4u91
        rfBoPgzU8oGgjkovq/9gdwGMM+u91Gkt3SLwbt0eKpxusenntTe1v7dV7y+H/wtpYWB3AZwnU2P2tKC6
        vUf0JfD2+vSf9997r9ae/665v8VTgDpkfkkLg3RYC7jVrBdTt7jWFUBoPWDVmvQd+k+fpj3vVylraDef
        +ztcj9CyIF1GAefLVJsMY8VOjVthn4jsFX2PPpZ+xZ87WXgC+lOemo5DYov5Q0DbZC6nZUHaIBvzSLPe
        TO0O1F4QDEngiPA9uSq9ev4Iij/M8/9EQal7AS0K0m8k4HR/bdaonRFOBdRIwPvmW8Lf8xr7z/nbfozo
        u5U1Wg79XTLc+APScirw98d3rhk2bnfL3sgkoBYG87eGrqaz46k+76tvaC/4dUXdNcliy+8xOZLqS0uC
        tCXf4brXTADflFVrXy58WjwB4Zs/3z7FP3a08PzgiPh7qMt91ZkRi00/r9CCIN1HAeq04BazRq42CNXu
        ORy5BNSU4LMNwj9sSAr39vcUvudfiGil/9RTfmYbfo5nl8yltCBIewpLq35zfCXbdFGwds+RyCVw/Kai
        vpdeFf6B/ZM63Pc9vEz7wh6j4v9hl9+q+A/JXEvLge4jAWfVMNmoj5o1+u+rvdFLQCW4R3jXvZvQqwnV
        2oNvzVNRF35X8W+vqbcqfnUb8Lm0GOiG0wH3/VYNP6aRwClTA8/3JcK3arXwjxoRn6J/cInwfpWv9Sjv
        GHt+9cTftbQU6MYjAffrVgWgtsLq3kBE74ajPuH95IuQEHxz54QW7Pz9+5xd6H2vl8K4RfhvnyV8y1cI
        7/sfC09ZtfDEKqRTbvDxXZXXsvhlNstcSCuB7rwoeIEcCXxmVQjq/gFVrT/GTwJG6TwUWj/wtMjEUzgG
        2dl+QGytqLEufqe7WP4ul9NCIBMk8GcyfwzTG4rS+rbIdgzaMOoKSPNHe51IuSz+v6BlQCZJ4Oey0X8e
        TgLfyyH8rgT30ImIOse/vaYhXOGrTUA75Otf0iIg8yTgdF8gC+DtcEWiLpJRtxdPh9GA+oyq11ebnMJ9
        L5nCQofrCloCZPrC4DKzW4mdtkBYWStcwb22LX61bqHOZGgUvuz5q95VUyGOPoBkS1mVerxYp07xqCJT
        IrDLiEAVvuXVfKfnsBz5LOKIA5w9JfiHAoe7SLOQQqcM1U00auN0qi7ioX6gQ7vHPx6fHO304UgDmC8O
        XihFsCLUU2oWllplV7vr1KO0EykDVfRq5KGeeryltDqSwldX9a2XYb4PoCmCf4tkNHDqHYfUtmJ16zF1
        uXEsQlD/rhrel9a3hob4W8KfzjOKR873b+KIAkQuAfW0oWkyTVEU3smbkZbvCu3CK5I9d4m3OVTQ6iYc
        6lkFocj3as+BeoJRcV1j6NTjVqvLdPWyT8poqSz+izmSADGJwH2JnBbce/ypuMLm2S8L/9kCR9VfceQA
        4ikCZ0gEd8giq7Vh4Ss5qbWLqzhSAImfGgyV+UjmQAqL/uhPm3ncufL1Io4MQPJlcFm+0yUL0P2xfL87
        CUV/UP6/NsrMl+//hiMAYJspguuCLaVVPWVhLpL55PgTio7GWPDN+Q7XV/J1mZx+DJavl/BLA6QJhU73
        ZbJor5Y99hj5qnrtR+TfvSD/vFa+f09mvcw6+eeXZYEvl+/vlu8nyfSQ/xwX6QAAAAAAAAAAAAAAAAAA
        pB//D8Lz/HvxXauaAAAAAElFTkSuQmCC
</value>
  </data>
</root>